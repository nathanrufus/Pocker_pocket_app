// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokerPocket.Data;

#nullable disable

namespace MyApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240612172527_UpdateGameModelWithDeckId")]
    partial class UpdateGameModelWithDeckId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("PokerPocket.Models.CardModel", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameModelGameId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlayerModelPlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Suit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CardId");

                    b.HasIndex("GameModelGameId");

                    b.HasIndex("PlayerModelPlayerId");

                    b.ToTable("CardModel");
                });

            modelBuilder.Entity("PokerPocket.Models.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("PokerPocket.Models.DeckModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Decks");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        });
                });

            modelBuilder.Entity("PokerPocket.Models.GameModel", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentBetAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentPlayerIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeckId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Pot")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameId");

                    b.HasIndex("DeckId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            CurrentBetAmount = 0,
                            CurrentPlayerIndex = 0,
                            DeckId = 1,
                            Name = "HOLD EM",
                            Pot = 0
                        },
                        new
                        {
                            GameId = 2,
                            CurrentBetAmount = 0,
                            CurrentPlayerIndex = 0,
                            DeckId = 2,
                            Name = "OMAHA",
                            Pot = 0
                        },
                        new
                        {
                            GameId = 3,
                            CurrentBetAmount = 0,
                            CurrentPlayerIndex = 0,
                            DeckId = 3,
                            Name = "TOURNAMENT",
                            Pot = 0
                        },
                        new
                        {
                            GameId = 4,
                            CurrentBetAmount = 0,
                            CurrentPlayerIndex = 0,
                            DeckId = 4,
                            Name = "FREE ROLL",
                            Pot = 0
                        });
                });

            modelBuilder.Entity("PokerPocket.Models.PlayerModel", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Balance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BetAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameModelGameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PlayerId");

                    b.HasIndex("GameModelGameId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PokerPocket.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PokerPocket.Models.CardModel", b =>
                {
                    b.HasOne("PokerPocket.Models.GameModel", null)
                        .WithMany("CommunityCards")
                        .HasForeignKey("GameModelGameId");

                    b.HasOne("PokerPocket.Models.PlayerModel", null)
                        .WithMany("Cards")
                        .HasForeignKey("PlayerModelPlayerId");
                });

            modelBuilder.Entity("PokerPocket.Models.GameModel", b =>
                {
                    b.HasOne("PokerPocket.Models.DeckModel", "Deck")
                        .WithMany()
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("PokerPocket.Models.PlayerModel", b =>
                {
                    b.HasOne("PokerPocket.Models.GameModel", null)
                        .WithMany("Players")
                        .HasForeignKey("GameModelGameId");
                });

            modelBuilder.Entity("PokerPocket.Models.GameModel", b =>
                {
                    b.Navigation("CommunityCards");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("PokerPocket.Models.PlayerModel", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
